coding conventions in icicle:
  - KISS
  - no file should be longer than 100 lines :)
  - double space indentation - no tabs (Google 'Spaces vs. Tabs')
  - both opening and closing braces on separate lines
  - only Unix-style carriage returns ("\n")
  - avoiding preprocessor macros
  - "two or more, use a for" (E.W. Dijkstra)
  - declare local variables as near to their use as possible
  - avoid overly long lines...
  - use references instead of pointers if possible
  - mark function arguments as const where possible
  - all variable, class and method named are lowercase
    optionally with underscores
  - all preprocessor macro names should end with _macro suffix

- code organisation:
  - one class per one header file (CERN C05)
  - each header file should be self-contained (CERN C01)
  - avoid unnecessary inclusions (CERN C02)
  - protect header files from multiple inclusion (CERN C03)
  - avoid multiple inheritance (CERN CB5)
  - filenames reflecting class structure with underscore 
    indicating inheritance, e.g. adv_lax-wendroff.hpp
  - filenames should be all-lowercase

- loop index naming conventions... ? (TODO)
- assert(condition && "message");   
- @pragma once
- cpp vs. hpp
- cfg only in cpp

References:
[CERN] - CERN C++ Coding Standard Specification
  http://pst.web.cern.ch/PST/HandBookWorkBook/Handbook/Programming/CodingStandard/c++standard.pdf
[Google] - Google C++ Style Guide
  http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml
[GNU] - GNU Coding Standards
  http://www.gnu.org/prep/standards/
