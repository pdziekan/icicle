-------------------------- ICICLE -----------------------------
* outline: a modern C++ implementation of a nonoscillatory
    forward in time solver for systems of generalised transport 
    equations with emphasis on cloud modelling applications
* keywords: MPDATA, cloud microphysics
* authors: Sylwester Arabas, Anna Jaruga & Hanna Pawlowska
* copyright: University of Warsaw ....... http://www.uw.edu.pl/
    Faculty of Physics ................. http://www.fuw.edu.pl/
    Institute of Geophysics ........ http://www.igf.fuw.edu.pl/
* status: pre-alpha (beta version planned for 2013 Q1)
* license: GPLv3+ (cf. COPYING) .. http://www.gnu.org/licenses/
* funding: Polish National Science Center .. http://ncn.gov.pl/
    grant no. 2011/01/N/ST10/01483

---------------------------------------------------------------
* requirements (see below for Debian/Fedora/Macports hints):

  - cmake ................................... http://cmake.org/

  - C++11 and optionally OpenMP compliant C++ compiler, e.g.
    - g++ (GCC >= 4.7.1) .................. http://gcc.gnu.org/
    - clang++ (no OpenMP as of '11) .... http://clang.llvm.org/
    - ... 

  - Blitz++ library ............. http://blitz.sourceforge.net/
    (preferably the development version from the hg repository)

  - Boost C++ libraries, incl.: ............. http://boost.org/
    - Boost.Units (header only)
    - Boost.program_options (headers and shared library)
    - Boost.conversion (headers only)
    - Boost.pointer_container (headers only)

* optional libraries:

  - Boost C++ libraries, incl.: ............. http://boost.org/
    - Boost.Thread (headers & shared library)
    - Boost.MPI (headers & shared library + MPI - see below)
    - Boost.Timer & Boost.System (header & shared library)

  - NetCDF C++ library .... http://www.unidata.ucar.edu/netcdf/
    (configured with netCDF4 support)

  - NetCDF C++4 bindings .. http://www.unidata.ucar.edu/netcdf/
    (ver >= 4.2 beta) .. ftp://ftp.unidata.ucar.edu/pub/netcdf/

  - Boost Sandbox libs: http://boost.org/community/sandbox.html
    - Boost.odeint (headers only) 

  - Thrust and CUDA .......... http://code.google.com/p/thrust/

  - GNU Scientific Library (GSL) .... http://www.gnu.org/s/gsl/

* MPI requirements:

  - MPI libraries with C++ bindings (optional), e.g.:
    - Open MPI ....................... http://www.open-mpi.org/
      (with --enable-mpi-threads if MPI+threads is to be used)
    - MPICH ................ http://www.mcs.anl.gov/mpi/mpich2/
    - LAM/MPI (obsolete -> Open MPI) .. http://www.lam-mpi.org/

  - MPI-enabled HDF5 library ...... TODO

  - HDF5-enabled netCDF4 library .. TODO

* Hints concerning use of packages:

  - All library packages have to be installed with the header
    files. For Debian/Ubuntu this means one needs to install
    the -dev suffixed packages (e.g. libboost-dev). For Fedora
    such packages have a -devel suffix (e.g. boost-devel)

  - Use of any Blitz++ package is discouraged. As of 2012 Q1 
    they are all largely outdated (better use the repository 
    version). Additionally, Blitz++ in principle should be 
    built with the same compiler as the software which is 
    using it.

  - MPI support is usually not enabled by default in packages.
    Furthermore, the user has to chose an MPI implementation.
    On Macports, Boost.MPI is enabled e.g. via the "openmpi" 
    variant of the boost port (port install boost+openmpi).
    On Fedora, one needs to install e.g. boost-mpich2-devel or
    boost-openmpi-devel (MPICH and OpenMPI variants,
    respectively). The Debian/Ubuntu counterparts of the above 
    are libboost-mpi-dev. 

    The MPI-enabled installation of netcdf with the new netCDF4 
    C++ API may be obtained on Macports by combining the 
    openmpi and netcdf4 variants of the netcdf port 
    (port install netcdf +netcdf4+openmpi).

    On Fedora the MPI-enabled netcdf packages are called 
    netcdf-openmpi and netcdf-mpich2.

--------------------------------------------------------------
* in-tree compilation / tests / clean-up:

  $ cmake . -DCMAKE_BUILD_TYPE=Debug|Release|None
    [-DNETCDF=NO]
    [-DTHREADS=NO]
    [-DOPENMP=NO]
    [-DMPI=NO]
    [-DTIMER=NO]
    [-DFLOAT=NO]
    [-DDOUBLE=NO]
    [-DLDOUBLE=NO]
  $ [VERBOSE=1] make            
  $ make test
  $ make clean 

  To chose a non-defalt compiler or library path:
  $ export CXX=openmpic++
  $ export CMAKE_PREFIX_PATH=/usr/local/

--------------------------------------------------------------
* usage:

  $ ./icicle --help
  $ ./icicle ... --slv serial
  $ ./icicle ... --slv threads --nsd N
  $ ./icicle ... --slv openmp --nsd N
  $ [open]mpirun -np N ./icicle ... --slv mpi --nsd N

--------------------------------------------------------------
* users' & developers' documentation draft:
  - see doc/doxygen/html/index.html (cd doc; doxygen # if 404)
